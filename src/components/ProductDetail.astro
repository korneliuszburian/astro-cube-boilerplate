---
/**
 * ProductDetail.astro
 * A detailed view of a single product with rarity-specific features and
 * effects. Includes 3D viewing, stats visualization, and related products.
 */

 import ItemCard from './ItemCard.astro';

interface Attribute {
  name: string;
  value: string;
}

interface Stats {
  [key: string]: number;
}

interface RelatedProduct {
  id: string;
  title: string;
  price: number;
  image: string;
  rarity: 'common' | 'rare' | 'mystic' | 'legendary';
}

interface Props {
  id: string;
  title: string;
  price: number;
  originalPrice?: number;
  images: string[];
  rarity: 'common' | 'rare' | 'mystic' | 'legendary';
  description: string;
  longDescription?: string;
  attributes?: Attribute[];
  stats?: Stats;
  inStock?: boolean;
  stockCount?: number;
  relatedProducts?: RelatedProduct[];
  class?: string;
}

const {
  id,
  title,
  price,
  originalPrice,
  images,
  rarity,
  description,
  longDescription,
  attributes = [],
  stats = {},
  inStock = true,
  stockCount,
  relatedProducts = [],
  class: className = ''
} = Astro.props;

// Format price
const formattedPrice = new Intl.NumberFormat('en-US', {
  style: 'currency',
  currency: 'USD'
}).format(price);

const formattedOriginalPrice = originalPrice
  ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(originalPrice)
  : null;

// Calculate discount percentage if original price exists
const discountPercentage = originalPrice
  ? Math.round(((originalPrice - price) / originalPrice) * 100)
  : null;

// Rarity information
const rarityInfo = {
  common: {
    label: "Common",
    description: "Quality essentials with reliable construction and performance."
  },
  rare: {
    label: "Rare",
    description: "Limited production runs with enhanced features and premium details."
  },
  mystic: {
    label: "Mystic",
    description: "Exclusive designs with advanced technology and superior craftsmanship."
  },
  legendary: {
    label: "Legendary",
    description: "Ultra-rare collector's items with unique features and exceptional quality."
  }
};
---

<section class:list={["product-detail", `product-detail--${rarity}`, className]}>
  <div class="product-detail__container">
    <!-- Product Gallery -->
    <div class="product-detail__gallery">
      <div class="product-detail__main-image-container">
        <img
          src={images[0]}
          alt={title}
          class="product-detail__main-image"
          id="main-product-image"
        />
        <div class="product-detail__rarity-badge" data-rarity={rarity}>
          <span class="product-detail__rarity-icon"></span>
          <span class="product-detail__rarity-name">{rarityInfo[rarity].label}</span>
        </div>

        {originalPrice && (
          <div class="product-detail__discount-badge">
            <span class="product-detail__discount-value">-{discountPercentage}%</span>
          </div>
        )}
      </div>

      {images.length > 1 && (
        <div class="product-detail__thumbnails">
          {images.map((image, index) => (
            <button
              class:list={[
                "product-detail__thumbnail-button",
                { "product-detail__thumbnail-button--active": index === 0 }
              ]}
              data-image={image}
              aria-label={`View image ${index + 1}`}
            >
              <img src={image} alt={`${title} - view ${index + 1}`} class="product-detail__thumbnail" />
            </button>
          ))}
        </div>
      )}

      <button class="product-detail__view-3d-button" id="view-3d-button">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
          <path d="M12 3l8 4.5v9L12 21l-8-4.5v-9L12 3z"/>
          <path d="M12 12l8-4.5M12 12v9M12 12L4 7.5"/>
        </svg>
        View in 3D
      </button>
    </div>

    <!-- Product Information -->
    <div class="product-detail__info">
      <div class="product-detail__header">
        <h1 class="product-detail__title">{title}</h1>

        <div class="product-detail__price-container">
          <div class="product-detail__price">{formattedPrice}</div>
          {formattedOriginalPrice && (
            <div class="product-detail__original-price">{formattedOriginalPrice}</div>
          )}
        </div>
      </div>

      <div class="product-detail__rarity-info">
        <div class="product-detail__rarity-label">Rarity:</div>
        <div class="product-detail__rarity-value" data-rarity={rarity}>
          {rarityInfo[rarity].label}
        </div>
        <div class="product-detail__rarity-description">
          {rarityInfo[rarity].description}
        </div>
      </div>

      <div class="product-detail__description">
        <p>{description}</p>
      </div>

      {longDescription && (
        <div class="product-detail__long-description">
          <div set:html={longDescription} />
        </div>
      )}

      <!-- Stats Visualization (if stats exist) -->
      {Object.keys(stats).length > 0 && (
        <div class="product-detail__stats">
          <h3 class="product-detail__stats-title">Item Stats</h3>
          <div class="product-detail__stats-grid">
            {Object.entries(stats).map(([key, value]) => (
              <div class="product-detail__stat">
                <div class="product-detail__stat-name">{key}</div>
                <div class="product-detail__stat-bar">
                  <div
                    class="product-detail__stat-fill"
                    style={`width: ${value}%`}
                    data-value={value}
                  ></div>
                  <span class="product-detail__stat-value">{value}</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}

      <!-- Attributes (if any) -->
      {attributes.length > 0 && (
        <div class="product-detail__attributes">
          <h3 class="product-detail__attributes-title">Specifications</h3>
          <div class="product-detail__attributes-grid">
            {attributes.map(attr => (
              <div class="product-detail__attribute">
                <div class="product-detail__attribute-name">{attr.name}</div>
                <div class="product-detail__attribute-value">{attr.value}</div>
              </div>
            ))}
          </div>
        </div>
      )}

      <!-- Add to Cart Section -->
      <div class="product-detail__actions">
        <div class="product-detail__quantity">
          <button class="product-detail__quantity-button" data-action="decrease">-</button>
          <input type="number" value="1" min="1" max={stockCount || 10} class="product-detail__quantity-input" />
          <button class="product-detail__quantity-button" data-action="increase">+</button>
        </div>

        <button
          class:list={[
            "product-detail__add-button",
            { "product-detail__add-button--disabled": !inStock }
          ]}
          disabled={!inStock}
          data-product-id={id}
        >
          {inStock ? 'Add to Inventory' : 'Out of Stock'}
          {inStock && (
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
              <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <path d="M16 10a4 4 0 0 1-8 0"></path>
            </svg>
          )}
        </button>
      </div>

      <!-- Stock Information -->
      {stockCount && stockCount < 10 && (
        <div class="product-detail__stock-info">
          <div class="product-detail__stock-indicator"></div>
          <span>Only {stockCount} left in stock</span>
        </div>
      )}
    </div>
  </div>

  <!-- Related Products Section -->
  {relatedProducts.length > 0 && (
    <div class="product-detail__related">
      <h2 class="product-detail__related-title">Complete Your Setup</h2>
      <div class="product-detail__related-grid">
        {relatedProducts.map(product => (
          <ItemCard
            id={product.id}
            title={product.title}
            price={product.price}
            image={product.image}
            rarity={product.rarity}
          />
        ))}
      </div>
    </div>
  )}

  <!-- 3D Model Viewer Modal (hidden by default) -->
  <div class="product-detail__modal product-detail__model-viewer" id="model-viewer-modal">
    <div class="product-detail__modal-content">
      <button class="product-detail__modal-close">Ã—</button>
      <h3 class="product-detail__modal-title">3D View - {title}</h3>
      <div class="product-detail__model-container">
        <div class="product-detail__model-placeholder">
          <!-- The 3D model would be loaded here -->
          <img src={images[0]} alt={title} class="product-detail__model-fallback" />
          <div class="product-detail__model-overlay">
            <p>Rotate and zoom to explore</p>
            <div class="product-detail__model-controls">
              <button class="product-detail__model-button" data-action="rotate-left">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="9 14 4 9 9 4"></polyline>
                  <path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>
                </svg>
              </button>
              <button class="product-detail__model-button" data-action="rotate-right">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="15 4 20 9 15 14"></polyline>
                  <path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>
                </svg>
              </button>
              <button class="product-detail__model-button" data-action="zoom-in">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <circle cx="11" cy="11" r="8"></circle>
                  <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                  <line x1="11" y1="8" x2="11" y2="14"></line>
                  <line x1="8" y1="11" x2="14" y2="11"></line>
                </svg>
              </button>
              <button class="product-detail__model-button" data-action="zoom-out">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <circle cx="11" cy="11" r="8"></circle>
                  <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                  <line x1="8" y1="11" x2="14" y2="11"></line>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ id, rarity }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Gallery image switching
    const mainImage = document.getElementById('main-product-image');
    const thumbnailButtons = document.querySelectorAll('.product-detail__thumbnail-button');

    thumbnailButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Update main image
        if (mainImage) {
          mainImage.src = button.dataset.image;
        }

        // Update active thumbnail
        thumbnailButtons.forEach(btn => btn.classList.remove('product-detail__thumbnail-button--active'));
        button.classList.add('product-detail__thumbnail-button--active');
      });
    });

    // Quantity input handlers
    const quantityInput = document.querySelector('.product-detail__quantity-input');
    const decreaseButton = document.querySelector('[data-action="decrease"]');
    const increaseButton = document.querySelector('[data-action="increase"]');

    if (quantityInput && decreaseButton && increaseButton) {
      decreaseButton.addEventListener('click', () => {
        const currentValue = parseInt(quantityInput.value, 10) || 1;
        if (currentValue > 1) {
          quantityInput.value = currentValue - 1;
        }
      });

      increaseButton.addEventListener('click', () => {
        const currentValue = parseInt(quantityInput.value, 10) || 1;
        const max = parseInt(quantityInput.max, 10) || 10;
        if (currentValue < max) {
          quantityInput.value = currentValue + 1;
        }
      });

      quantityInput.addEventListener('change', () => {
        const max = parseInt(quantityInput.max, 10) || 10;
        let value = parseInt(quantityInput.value, 10);

        if (isNaN(value) || value < 1) {
          value = 1;
        } else if (value > max) {
          value = max;
        }

        quantityInput.value = value;
      });
    }

    // 3D Model viewer modal
    const viewButton = document.getElementById('view-3d-button');
    const modelModal = document.getElementById('model-viewer-modal');
    const closeButton = modelModal?.querySelector('.product-detail__modal-close');

    if (viewButton && modelModal && closeButton) {
      viewButton.addEventListener('click', () => {
        modelModal.classList.add('product-detail__modal--active');
        document.body.classList.add('modal-open');
      });

      closeButton.addEventListener('click', () => {
        modelModal.classList.remove('product-detail__modal--active');
        document.body.classList.remove('modal-open');
      });

      // Close on outside click
      modelModal.addEventListener('click', (e) => {
        if (e.target === modelModal) {
          modelModal.classList.remove('product-detail__modal--active');
          document.body.classList.remove('modal-open');
        }
      });

      // Model controls (would connect to actual 3D model library in production)
      const modelButtons = document.querySelectorAll('.product-detail__model-button');

      modelButtons.forEach(button => {
        button.addEventListener('click', () => {
          const action = button.dataset.action;
          console.log(`3D model action: ${action}`);
          // Here you would implement actual 3D model interactions
        });
      });
    }

    // Add to cart handler
    const addButton = document.querySelector('.product-detail__add-button');

    if (addButton) {
      addButton.addEventListener('click', () => {
        // Get quantity
        const quantity = parseInt(quantityInput?.value || '1', 10);

        // Animation effect based on rarity
        addButton.classList.add('product-detail__add-button--adding');

        // Add rarity-specific effect
        let effectDuration = 1000;

        if (rarity === 'legendary') {
          effectDuration = 2000;
          addLegendaryEffect();
        } else if (rarity === 'mystic') {
          effectDuration = 1500;
          addMysticEffect();
        } else if (rarity === 'rare') {
          effectDuration = 1200;
          addRareEffect();
        } else {
          addCommonEffect();
        }

        // Reset button after animation
        setTimeout(() => {
          addButton.classList.remove('product-detail__add-button--adding');

          // Show success message
          showAddedToCartMessage();
        }, effectDuration);

        // Dispatch custom event for cart system
        const addToCartEvent = new CustomEvent('addToCart', {
          detail: {
            productId: id,
            quantity: quantity,
            rarity: rarity
          }
        });

        document.dispatchEvent(addToCartEvent);
      });
    }

    // Rarity-specific add to cart effects
    function addCommonEffect() {
      // Simple effect for common items
      const effect = document.createElement('div');
      effect.className = 'product-detail__add-effect product-detail__add-effect--common';
      addButton.appendChild(effect);

      setTimeout(() => {
        effect.remove();
      }, 1000);
    }

    function addRareEffect() {
      // Effect for rare items
      const effect = document.createElement('div');
      effect.className = 'product-detail__add-effect product-detail__add-effect--rare';
      addButton.appendChild(effect);

      // Create multiple particles
      for (let i = 0; i < 10; i++) {
        const particle = document.createElement('div');
        particle.className = 'product-detail__effect-particle';
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.animationDuration = `${800 + Math.random() * 400}ms`;
        particle.style.animationDelay = `${Math.random() * 200}ms`;
        effect.appendChild(particle);
      }

      setTimeout(() => {
        effect.remove();
      }, 1200);
    }

    function addMysticEffect() {
      // Effect for mystic items
      const effect = document.createElement('div');
      effect.className = 'product-detail__add-effect product-detail__add-effect--mystic';
      addButton.appendChild(effect);

      // Create ring effect
      const ring = document.createElement('div');
      ring.className = 'product-detail__effect-ring';
      effect.appendChild(ring);

      // Create particles
      for (let i = 0; i < 15; i++) {
        const particle = document.createElement('div');
        particle.className = 'product-detail__effect-particle';
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.animationDuration = `${800 + Math.random() * 700}ms`;
        particle.style.animationDelay = `${Math.random() * 300}ms`;
        effect.appendChild(particle);
      }

      setTimeout(() => {
        effect.remove();
      }, 1500);
    }

    function addLegendaryEffect() {
      // Epic effect for legendary items
      const effect = document.createElement('div');
      effect.className = 'product-detail__add-effect product-detail__add-effect--legendary';
      addButton.appendChild(effect);

      // Create multiple rings
      for (let i = 0; i < 3; i++) {
        const ring = document.createElement('div');
        ring.className = 'product-detail__effect-ring';
        ring.style.animationDelay = `${i * 150}ms`;
        effect.appendChild(ring);
      }

      // Create many particles
      for (let i = 0; i < 25; i++) {
        const particle = document.createElement('div');
        particle.className = 'product-detail__effect-particle';
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.animationDuration = `${1000 + Math.random() * 1000}ms`;
        particle.style.animationDelay = `${Math.random() * 500}ms`;
        effect.appendChild(particle);
      }

      // Create a shine effect
      const shine = document.createElement('div');
      shine.className = 'product-detail__effect-shine';
      effect.appendChild(shine);

      setTimeout(() => {
        effect.remove();
      }, 2000);

      // Also add a brief screen flash effect for legendary items
      const flashEffect = document.createElement('div');
      flashEffect.className = 'product-detail__screen-flash';
      document.body.appendChild(flashEffect);

      setTimeout(() => {
        flashEffect.remove();
      }, 1000);
    }

    function showAddedToCartMessage() {
      // Create and show a success message
      const message = document.createElement('div');
      message.className = 'product-detail__add-message';

      // Add rarity class
      message.classList.add(`product-detail__add-message--${rarity}`);

      // Message content
      message.innerHTML = `
        <div class="product-detail__add-message-icon">âœ“</div>
        <div class="product-detail__add-message-text">
          <strong>Added to inventory!</strong>
          <span>Check your cart to equip it.</span>
        </div>
      `;

      // Add to page
      document.body.appendChild(message);

      // Animate in
      setTimeout(() => {
        message.classList.add('product-detail__add-message--visible');
      }, 10);

      // Auto remove after delay
      setTimeout(() => {
        message.classList.remove('product-detail__add-message--visible');

        // Remove from DOM after animation
        setTimeout(() => {
          message.remove();
        }, 300);
      }, 3000);
    }
  });
</script>

<style>
  .product-detail {
    margin: var(--space-2xl) 0;
  }

  .product-detail__container {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-xl);
  }

  @media (min-width: 768px) {
    .product-detail__container {
      grid-template-columns: 1fr 1fr;
    }
  }

  /* Gallery styles */
  .product-detail__gallery {
    position: relative;
  }

  .product-detail__main-image-container {
    position: relative;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    background-color: var(--theme-surface);
    aspect-ratio: 3/4;
  }

  .product-detail__main-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-standard);
  }

  .product-detail__main-image:hover {
    transform: scale(1.05);
  }

  .product-detail__thumbnails {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s);
    margin-top: var(--space-m);
  }

  .product-detail__thumbnail-button {
    width: 80px;
    height: 80px;
    border: 2px solid transparent;
    border-radius: var(--radius-md);
    overflow: hidden;
    padding: 0;
    background: none;
    cursor: pointer;
    transition: all var(--transition-standard);
  }

  .product-detail__thumbnail-button:hover {
    transform: translateY(-3px);
  }

  .product-detail__thumbnail-button--active {
    border-color: var(--theme-primary);
  }

  .product-detail__thumbnail {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-detail__view-3d-button {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
    padding: var(--space-s) var(--space-m);
    margin-top: var(--space-m);
    background-color: var(--theme-surface);
    color: var(--theme-text-primary);
    border: none;
    border-radius: var(--radius-button);
    font-family: var(--font-secondary);
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-standard);
    backdrop-filter: var(--card-backdrop-filter);
  }

  .product-detail__view-3d-button:hover {
    background-color: var(--theme-primary);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  /* Rarity badge */
  .product-detail__rarity-badge {
    position: absolute;
    top: var(--space-s);
    right: var(--space-s);
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-xs) var(--space-s);
    background-color: rgba(0, 0, 0, 0.7);
    border-radius: var(--radius-full);
    backdrop-filter: blur(4px);
    font-size: 0.85rem;
    font-family: var(--font-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-weight: bold;
  }

  .product-detail__rarity-icon {
    display: inline-block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
  }

  .product-detail__rarity-badge[data-rarity="common"] {
    color: var(--color-rarity-common);
  }

  .product-detail__rarity-badge[data-rarity="common"] .product-detail__rarity-icon {
    background-color: var(--color-rarity-common);
  }

  .product-detail__rarity-badge[data-rarity="rare"] {
    color: var(--color-rarity-rare);
  }

  .product-detail__rarity-badge[data-rarity="rare"] .product-detail__rarity-icon {
    background-color: var(--color-rarity-rare);
    box-shadow: 0 0 5px var(--color-rarity-rare);
  }

  .product-detail__rarity-badge[data-rarity="mystic"] {
    color: var(--color-rarity-mystic);
  }

  .product-detail__rarity-badge[data-rarity="mystic"] .product-detail__rarity-icon {
    background-color: var(--color-rarity-mystic);
    box-shadow: 0 0 8px var(--color-rarity-mystic);
  }

  .product-detail__rarity-badge[data-rarity="legendary"] {
    color: var(--color-rarity-legendary);
  }

  .product-detail__rarity-badge[data-rarity="legendary"] .product-detail__rarity-icon {
    background-color: var(--color-rarity-legendary);
    box-shadow: 0 0 12px var(--color-rarity-legendary);
    animation: pulse 2s infinite alternate;
  }

  /* Discount badge */
  .product-detail__discount-badge {
    position: absolute;
    top: var(--space-s);
    left: var(--space-s);
    background-color: var(--theme-primary);
    color: white;
    padding: var(--space-xs) var(--space-s);
    border-radius: var(--radius-full);
    font-weight: bold;
    font-size: 0.85rem;
  }

  /* Product info styles */
  .product-detail__header {
    margin-bottom: var(--space-l);
  }

  .product-detail__title {
    font-size: var(--size-step-3);
    margin-bottom: var(--space-s);
    color: var(--theme-text-primary);
    font-family: var(--font-primary);
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }

  .product-detail__price-container {
    display: flex;
    align-items: center;
    gap: var(--space-s);
  }

  .product-detail__price {
    font-size: var(--size-step-2);
    font-weight: bold;
    color: var(--theme-text-primary);
  }

  .product-detail__original-price {
    font-size: var(--size-step-1);
    text-decoration: line-through;
    color: var(--theme-text-secondary);
    opacity: 0.7;
  }

  .product-detail__rarity-info {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--space-xs) var(--space-m);
    margin-bottom: var(--space-l);
    padding: var(--space-s) var(--space-m);
    background-color: var(--theme-surface);
    border-radius: var(--radius-md);
    backdrop-filter: var(--card-backdrop-filter);
  }

  .product-detail__rarity-label {
    font-family: var(--font-secondary);
    font-weight: bold;
    color: var(--theme-text-secondary);
  }

  .product-detail__rarity-value {
    font-weight: bold;
    font-family: var(--font-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .product-detail__rarity-value[data-rarity="common"] {
    color: var(--color-rarity-common);
  }

  .product-detail__rarity-value[data-rarity="rare"] {
    color: var(--color-rarity-rare);
  }

  .product-detail__rarity-value[data-rarity="mystic"] {
    color: var(--color-rarity-mystic);
  }

  .product-detail__rarity-value[data-rarity="legendary"] {
    color: var(--color-rarity-legendary);
  }

  .product-detail__rarity-description {
    grid-column: 1 / -1;
    color: var(--theme-text-secondary);
    font-size: 0.9rem;
    line-height: 1.5;
  }

  .product-detail__description {
    margin-bottom: var(--space-l);
    color: var(--theme-text-primary);
    line-height: 1.6;
  }

  .product-detail__long-description {
    margin-bottom: var(--space-l);
    color: var(--theme-text-secondary);
    line-height: 1.6;
  }

  /* Stats styles */
  .product-detail__stats {
    margin-bottom: var(--space-l);
    padding: var(--space-m);
    background-color: var(--theme-surface);
    border-radius: var(--radius-md);
    backdrop-filter: var(--card-backdrop-filter);
  }

  .product-detail__stats-title {
    font-size: var(--size-step-1);
    margin-bottom: var(--space-m);
    color: var(--theme-text-primary);
    font-family: var(--font-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .product-detail__stats-grid {
    display: grid;
    gap: var(--space-m);
  }

  .product-detail__stat {
    display: grid;
    grid-template-columns: 100px 1fr;
    align-items: center;
    gap: var(--space-s);
  }

  .product-detail__stat-name {
    text-transform: capitalize;
    font-family: var(--font-secondary);
    color: var(--theme-text-secondary);
  }

  .product-detail__stat-bar {
    height: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-full);
    overflow: hidden;
    position: relative;
  }

  .product-detail__stat-fill {
    height: 100%;
    border-radius: var(--radius-full);
    animation: statFillAnimation 1.5s ease-out forwards;
    transform-origin: left;
    transform: scaleX(0);
  }

  .product-detail--common .product-detail__stat-fill {
    background-color: var(--color-rarity-common);
  }

  .product-detail--rare .product-detail__stat-fill {
    background-color: var(--color-rarity-rare);
  }

  .product-detail--mystic .product-detail__stat-fill {
    background-color: var(--color-rarity-mystic);
  }

  .product-detail--legendary .product-detail__stat-fill {
    background-color: var(--color-rarity-legendary);
    background-image: linear-gradient(45deg,
      rgba(255,255,255,0.2) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255,255,255,0.2) 50%,
      rgba(255,255,255,0.2) 75%,
      transparent 75%,
      transparent
    );
    background-size: 20px 20px;
    animation: statFillAnimation 1.5s ease-out forwards, legendaryBarAnimation 1s linear infinite;
  }

  .product-detail__stat-value {
    position: absolute;
    right: var(--space-xs);
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.75rem;
    font-weight: bold;
    color: white;
  }

  /* Attributes styles */
  .product-detail__attributes {
    margin-bottom: var(--space-l);
    padding: var(--space-m);
    background-color: var(--theme-surface);
    border-radius: var(--radius-md);
    backdrop-filter: var(--card-backdrop-filter);
  }

  .product-detail__attributes-title {
    font-size: var(--size-step-1);
    margin-bottom: var(--space-m);
    color: var(--theme-text-primary);
    font-family: var(--font-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .product-detail__attributes-grid {
    display: grid;
    gap: var(--space-s);
  }

  .product-detail__attribute {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-s);
    padding-bottom: var(--space-xs);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .product-detail__attribute-name {
    color: var(--theme-text-secondary);
    font-family: var(--font-secondary);
  }

  .product-detail__attribute-value {
    color: var(--theme-text-primary);
    font-weight: 500;
  }

  /* Add to cart section */
  .product-detail__actions {
    display: flex;
    gap: var(--space-m);
    margin-bottom: var(--space-l);
  }

  .product-detail__quantity {
    display: flex;
    align-items: center;
    border-radius: var(--radius-button);
    border: 1px solid rgba(255, 255, 255, 0.2);
    overflow: hidden;
  }

  .product-detail__quantity-button {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--theme-text-primary);
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    transition: background-color var(--transition-standard);
  }

  .product-detail__quantity-button:hover {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .product-detail__quantity-input {
    width: 50px;
    height: 40px;
    text-align: center;
    border: none;
    background: none;
    color: var(--theme-text-primary);
    font-family: var(--font-secondary);
    -moz-appearance: textfield;
  }

  .product-detail__quantity-input::-webkit-inner-spin-button,
  .product-detail__quantity-input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .product-detail__add-button {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-s);
    padding: var(--space-s) var(--space-l);
    font-family: var(--font-primary);
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border: none;
    border-radius: var(--radius-button);
    cursor: pointer;
    transition: all var(--transition-standard);
    position: relative;
    overflow: hidden;
  }

  .product-detail--common .product-detail__add-button {
    background-color: var(--color-rarity-common);
    color: #000;
  }

  .product-detail--rare .product-detail__add-button {
    background-color: var(--color-rarity-rare);
    color: #000;
  }

  .product-detail--mystic .product-detail__add-button {
    background-color: var(--color-rarity-mystic);
    color: #000;
  }

  .product-detail--legendary .product-detail__add-button {
    background-color: var(--color-rarity-legendary);
    color: #000;
  }

  .product-detail__add-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
  }

  .product-detail__add-button--disabled {
    background-color: rgba(255, 255, 255, 0.2) !important;
    color: var(--theme-text-secondary) !important;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
  }

  .product-detail__add-button--adding {
    pointer-events: none;
  }

  /* Stock information */
  .product-detail__stock-info {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    color: var(--theme-text-secondary);
    font-size: 0.9rem;
    margin-bottom: var(--space-l);
  }

  .product-detail__stock-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(255, 87, 34, 0.8);
    animation: pulse 2s infinite alternate;
  }

  /* Related products */
  .product-detail__related {
    margin-top: var(--space-3xl);
  }

  .product-detail__related-title {
    font-size: var(--size-step-2);
    margin-bottom: var(--space-xl);
    color: var(--theme-text-primary);
    text-align: center;
    font-family: var(--font-primary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .product-detail__related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--space-xl);
  }

  /* 3D Model Viewer Modal */
  .product-detail__modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: var(--z-modal);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-standard);
    backdrop-filter: blur(5px);
  }

  .product-detail__modal--active {
    opacity: 1;
    visibility: visible;
  }

  .product-detail__modal-content {
    width: 90%;
    max-width: 800px;
    max-height: 90vh;
    background-color: var(--theme-surface);
    border-radius: var(--radius-lg);
    padding: var(--space-l);
    position: relative;
    overflow: hidden;
    backdrop-filter: var(--card-backdrop-filter);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
  }

  .product-detail__modal-close {
    position: absolute;
    top: var(--space-s);
    right: var(--space-s);
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.1);
    border: none;
    color: var(--theme-text-primary);
    font-size: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all var(--transition-standard);
    z-index: 1;
  }

  .product-detail__modal-close:hover {
    background-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
  }

  .product-detail__modal-title {
    font-size: var(--size-step-1);
    margin-bottom: var(--space-m);
    color: var(--theme-text-primary);
    font-family: var(--font-primary);
    text-align: center;
  }

  .product-detail__model-container {
    width: 100%;
    height: 500px;
    max-height: 70vh;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: var(--radius-md);
    position: relative;
    overflow: hidden;
  }

  .product-detail__model-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .product-detail__model-fallback {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .product-detail__model-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
  }

  .product-detail__model-controls {
    display: flex;
    gap: var(--space-s);
    margin-top: var(--space-m);
  }

  .product-detail__model-button {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all var(--transition-standard);
  }

  .product-detail__model-button:hover {
    background-color: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
  }

  /* Add to cart effects */
  .product-detail__add-effect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--radius-button);
    overflow: hidden;
    pointer-events: none;
  }

  .product-detail__add-effect--common {
    background-color: var(--color-rarity-common);
    animation: addEffectPulse 1s ease-out;
  }

  .product-detail__add-effect--rare {
    background-color: var(--color-rarity-rare);
    animation: addEffectPulse 1.2s ease-out;
  }

  .product-detail__add-effect--mystic {
    background-color: var(--color-rarity-mystic);
    animation: addEffectPulse 1.5s ease-out;
  }

  .product-detail__add-effect--legendary {
    background-color: var(--color-rarity-legendary);
    animation: addEffectPulse 2s ease-out;
  }

  .product-detail__effect-particle {
    position: absolute;
    width: 6px;
    height: 6px;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    bottom: 0;
    animation: particleEffect 1s ease-out forwards;
  }

  .product-detail__effect-ring {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    width: 100%;
    height: 100%;
    border: 2px solid white;
    border-radius: 50%;
    animation: ringEffect 1.5s ease-out forwards;
  }

  .product-detail__effect-shine {
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0) 45%,
      rgba(255, 255, 255, 0.7) 50%,
      rgba(255, 255, 255, 0) 55%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(30deg) translateX(-100%);
    animation: shineEffect 2s ease-out forwards;
  }

  .product-detail__screen-flash {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 213, 79, 0.2);
    z-index: var(--z-overlay);
    pointer-events: none;
    animation: screenFlash 1s ease-out forwards;
  }

  /* Add to cart success message */
  .product-detail__add-message {
    position: fixed;
    bottom: 30px;
    right: 30px;
    display: flex;
    align-items: center;
    gap: var(--space-m);
    padding: var(--space-m);
    background-color: var(--theme-surface);
    border-radius: var(--radius-md);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    backdrop-filter: var(--card-backdrop-filter);
    color: var(--theme-text-primary);
    transform: translateY(100px);
    opacity: 0;
    transition: all 0.3s ease;
    z-index: var(--z-toast);
  }

  .product-detail__add-message--visible {
    transform: translateY(0);
    opacity: 1;
  }

  .product-detail__add-message--common {
    border-left: 4px solid var(--color-rarity-common);
  }

  .product-detail__add-message--rare {
    border-left: 4px solid var(--color-rarity-rare);
  }

  .product-detail__add-message--mystic {
    border-left: 4px solid var(--color-rarity-mystic);
  }

  .product-detail__add-message--legendary {
    border-left: 4px solid var(--color-rarity-legendary);
  }

  .product-detail__add-message-icon {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background-color: var(--theme-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
  }

  .product-detail__add-message--common .product-detail__add-message-icon {
    background-color: var(--color-rarity-common);
    color: #000;
  }

  .product-detail__add-message--rare .product-detail__add-message-icon {
    background-color: var(--color-rarity-rare);
    color: #000;
  }

  .product-detail__add-message--mystic .product-detail__add-message-icon {
    background-color: var(--color-rarity-mystic);
    color: #000;
  }

  .product-detail__add-message--legendary .product-detail__add-message-icon {
    background-color: var(--color-rarity-legendary);
    color: #000;
    animation: pulse 2s infinite alternate;
  }

  .product-detail__add-message-text {
    display: flex;
    flex-direction: column;
  }

  .product-detail__add-message-text strong {
    margin-bottom: var(--space-2xs);
  }

  .product-detail__add-message-text span {
    font-size: 0.85rem;
    color: var(--theme-text-secondary);
  }

  /* Animations */
  @keyframes pulse {
    0% { transform: scale(1); opacity: 0.8; }
    100% { transform: scale(1.5); opacity: 1; }
  }

  @keyframes statFillAnimation {
    0% { transform: scaleX(0); }
    100% { transform: scaleX(1); }
  }

  @keyframes legendaryBarAnimation {
    0% { background-position: 0 0; }
    100% { background-position: 20px 0; }
  }

  @keyframes addEffectPulse {
    0% { opacity: 0.8; }
    100% { opacity: 0; }
  }

  @keyframes particleEffect {
    0% {
      transform: translateY(0) scale(1);
      opacity: 1;
    }
    100% {
      transform: translateY(-100px) scale(0);
      opacity: 0;
    }
  }

  @keyframes ringEffect {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(2);
      opacity: 0;
    }
  }

  @keyframes shineEffect {
    0% {
      transform: rotate(30deg) translateX(-100%);
      opacity: 0;
    }
    25% {
      opacity: 1;
    }
    50% {
      transform: rotate(30deg) translateX(100%);
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes screenFlash {
    0% { opacity: 0; }
    10% { opacity: 1; }
    100% { opacity: 0; }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .product-detail__title {
      font-size: var(--size-step-2);
    }

    .product-detail__actions {
      flex-direction: column;
    }

    .product-detail__quantity {
      width: 100%;
    }

    .product-detail__quantity-input {
      flex-grow: 1;
    }

    .product-detail__related-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }

  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .product-detail__stat-fill {
      animation: none;
      transform: none;
    }

    .product-detail--legendary .product-detail__stat-fill {
      animation: none;
    }

    .product-detail__rarity-badge[data-rarity="legendary"] .product-detail__rarity-icon,
    .product-detail__stock-indicator {
      animation: none;
    }

    .product-detail__add-message--legendary .product-detail__add-message-icon {
      animation: none;
    }
  }
</style>
